#Использовать "."

Перем репозиторий;

Процедура ИницилизацияПеременных() 
	
	Репозиторий	= "C:\axioma\asfzd\asfzd";

КонецПроцедуры

Функция ФайлыПоЗадаче(ИдентификаторЗадачи, репозиторий)
	
	СписокФайловПоЗадаче = Новый ОбщиеМетоды();
	Возврат СписокФайловПоЗадаче.СписокФайловПоЗадаче(ИдентификаторЗадачи, Репозиторий);

КонецФункции

Функция МассивСтрокПоКлючевомуСлову(КлючевоеСлово, ИмяФайла)
	
	//find /N /I "функция" D:\gitlog\*.txt	
	КоманднаяСтрока	= СтрШаблон("
	|chcp 65001
	|find /N /I ""%1"" ""%2""", КлючевоеСлово, ИмяФайла);

	Методы					= Новый ОбщиеМетоды();
	СтрокиКлючевогоСлова	= Методы.ВыполнитьНесколькоКоманд(КоманднаяСтрока, Репозиторий, КодировкаТекста.UTF8);
	
	Если СтрокиКлючевогоСлова = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НовыйМассив = Новый Массив;
	
	НомерСтроки = 0;
	Для Каждого Строка Из СтрокиКлючевогоСлова Цикл
		НомерСтроки = НомерСтроки +1; 
		
		Если НомерСтроки >2 И ЗначениеЗаполнено(Строка) Тогда
			
			НовыйМассив.Добавить(СокрЛП(Строка));
			
		КонецЕсли;
		
	КонецЦикла;	
	
	Возврат НовыйМассив;

КонецФункции

Функция СледующаяСтрокаМассива(Массив, НомерТекущейСтроки)
	
	Если Массив = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;

	НомерТекущейСтроки = НомерТекущейСтроки + 1;
	Возврат ?(НомерТекущейСтроки <= Массив.Количество() , Массив[НомерТекущейСтроки -1], Неопределено);

КонецФункции

Функция СлияниеМассивов(Массив1, Массив2)
	
	Слияние = Новый Массив();
	
	НомерСтроки1    = 0;
	НомерСтроки2    = 0;
	СтрокаМассива1  = СледующаяСтрокаМассива(Массив1, НомерСтроки1);
	СтрокаМассива2  = СледующаяСтрокаМассива(Массив2, НомерСтроки2);
	
	Пока  СтрокаМассива1 <> Неопределено Или СтрокаМассива2 <> Неопределено Цикл
		Если СтрокаМассива1 = Неопределено Тогда
			Слияние.Добавить(СтрокаМассива2);
			СтрокаМассива2 = СледующаяСтрокаМассива(Массив2, НомерСтроки2);		
		ИначеЕсли СтрокаМассива2 = Неопределено Тогда
			Слияние.Добавить(СтрокаМассива1);
			СтрокаМассива1 = СледующаяСтрокаМассива(Массив1, НомерСтроки1);			
		ИначеЕсли  Меньше(СтрокаМассива1, СтрокаМассива2)  Тогда
			Слияние.Добавить(СтрокаМассива1);
			СтрокаМассива1 = СледующаяСтрокаМассива(Массив1, НомерСтроки1);
		ИначеЕсли Меньше(СтрокаМассива2, СтрокаМассива1)  Тогда
			Слияние.Добавить(СтрокаМассива2);
			СтрокаМассива2 = СледующаяСтрокаМассива(Массив2, НомерСтроки2);
		Иначе 
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Возврат Слияние;

КонецФункции

Функция ПересечениеМассивов(Массив1, Массив2)
КонецФункции

Функция СтруктураФайла(ИмяФайла)
		
	ПроцедурыМодуля			= МассивСтрокПоКлючевомуСлову("Процедура", ИмяФайла);	
	КонецПроцедурыМодуля	= МассивСтрокПоКлючевомуСлову("КонецПроцедуры", ИмяФайла);
	ФункцииМодуля			= МассивСтрокПоКлючевомуСлову("Функция", ИмяФайла);	
	КонецФункцииМодуля		= МассивСтрокПоКлючевомуСлову("КонецФункции", ИмяФайла);	

	СтруктураМодуля = СлияниеМассивов(ФункцииМодуля, КонецФункцииМодуля);
	СтруктураМодуля = СлияниеМассивов(СтруктураМодуля, ПроцедурыМодуля);
	СтруктураМодуля = СлияниеМассивов(СтруктураМодуля, КонецПроцедурыМодуля);

	Возврат СтруктураМодуля; 

КонецФункции

Функция СтруктураЗадачи(ИмяФайла, ИдентификаторЗадачи)
		
	СтруктураЗадачи	= МассивСтрокПоКлючевомуСлову(ИдентификаторЗадачи, ИмяФайла);	

	Возврат СтруктураЗадачи; 

КонецФункции

Функция ИзмененияВФайлеПоЗадаче(ИмяФайла, ИдентификаторЗадачи)

	СтруктураФайла 	= СтруктураФайла(ИмяФайла);	 
	СтруктураЗадачи	= СтруктураЗадачи(ИмяФайла, ИдентификаторЗадачи);
	
	Возврат ПересечениеМассивов(СтруктураФайла, СтруктураЗадачи); 
	
КонецФункции

Процедура ДобавитьСтрокуРедмайна(ОписаниеРедмайн,ПерваяКолонка, ВтораяКолонка)
	
	Строка = СтрШаблон("|%1|%2|", ПерваяКолонка, ВтораяКолонка);
	ОписаниеРедмайн.ДобавитьСтроку(Строка);

КонецПроцедуры

Функция ИмяФайлаДляСонара()
КонецФункции

Функция ОписаниеРедмайн(ФайлыПоЗадаче, ИдентификаторЗадачи)

	ОписаниеРедмайн	=	 Новый ТекстовыйДокумент();
	ДобавитьСтрокуРедмайна(ОписаниеРедмайн, "Объект", "Изменения");

	Методы = Новый ОбщиеМетоды();
	
	Для Каждого ИмяФайла Из ФайлыПоЗадаче Цикл
		
		ИмяФайлаПоСтандартамСонарКуба	= Методы.ИмяФайлаПоСтандартамСонарКуба(ИмяФайла, Репозиторий);
		ИзмененияВФайлеПоЗадаче 		= ИзмененияВФайлеПоЗадаче(ИмяФайла, ИдентификаторЗадачи);				
		ДобавитьСтрокуРедмайна(ОписаниеРедмайн, ИмяФайлаПоСтандартамСонарКуба, ИзмененияВФайлеПоЗадаче);

	КонецЦикла;

КонецФункции

ИдентификаторЗадачи 		= "b911c27cb049374f11ee329625d1132c"; // закрытие
//UrlCard 		= "БлокироватьЭлементыФормПриАннуллированииПоСроку"; // закрытиеСписокФайловПоЗадаче

ИницилизацияПеременных();
ФайлыПоЗадаче	= ФайлыПоЗадаче(ИдентификаторЗадачи, репозиторий);
ОписаниеРедмайн = ОписаниеРедмайн(ФайлыПоЗадаче, ИдентификаторЗадачи) ;
