#Использовать "."

Перем Redmine; // экземпляр класса для работы с redmine

Процедура СоздатьЗадачуRedmine(ПараметрыСоздания)
	
	// 1. Разбираем url kaiten - получаем задачу и информацию в ней
	kaitenCard = Redmine.ДанныеЗадачиKaiten();
	// 2. Получаем дополнительные параметры для получения сведений по пользователям
	Redmine.ДополнитьДанныеЗадачиKaiten(kaitenCard);
	// 2.1 Проверка корректности заполнения / полноты данных задачи kaiten
	// Минимальная проверка на наличие номера задачи RM. Если уже указан номер, то тогда не выполняем создание задачи
	НомерЗадачиRedmine = kaitenCard.Получить("НомерЗадачиRedmine");
	Если НомерЗадачиRedmine <> Неопределено Тогда
		Сообщить("Для задачи уже определен номер задачи в redmine - " + Строка(НомерЗадачиRedmine));
		Возврат;
	КонецЕсли;
	// 3. Формируем данные задачи Redmine
	ДанныеЗадачиRedmine = Redmine.СформироватьДанныеЗадачи(kaitenCard);
	// 3.1 Проверка заполнения основных данных для запроса
	РезультатПроверки = Redmine.ПроверитьСформированныеДанныеЗадачиRedmine(ДанныеЗадачиRedmine);
	Если РезультатПроверки.Результат = Ложь Тогда
		Сообщить("Некорректно сформированы данные для запроса в redmine:
			|" + РезультатПроверки.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	// 4. Отправляем запрос на создание в Redmine и получаем ответ
	РезультатСоздания = Redmine.ОтправитьЗапросВRedmine(ПараметрыСоздания.createIssueURL, "POST", ДанныеЗадачиRedmine);
	ОшибкиСоздания = РезультатСоздания.Получить("errors");
	Если ОшибкиСоздания <> Неопределено Тогда
		ТекстОшибки = СтрСоединить(ОшибкиСоздания, Символы.ПС);
		Сообщить("Выполнение http-запроса завершилось с ошибками:
			|" + ТекстОшибки);
		Возврат;
	КонецЕсли;
	ДанныеНовойЗадачи = РезультатСоздания.Получить("issue");
	ИДНовойЗадачи = Неопределено;
	Если ДанныеНовойЗадачи = Неопределено Тогда
		Сообщить("Непредвиденная ошибка, http-запрос выполнен, данные задачи не получены!");
		Возврат;
	Иначе
		ИДНовойЗадачи = ДанныеНовойЗадачи.Получить("id");
	КонецЕсли;
	
	// Обновление задачи для заполнения пользовательских полей (Обновление не требуется, если есть права на поля)
	//issueURL = "";
	//updateIssueURL = "";
	//Если ИДНовойЗадачи <> Неопределено Тогда
	//	issueURL = ПараметрыСоздания.redmineURL + "issues/" + Строка(ИДНовойЗадачи);
	//	updateIssueURL = issueURL + ".json";
	//КонецЕсли;
	//
	//Если ЗначениеЗаполнено(updateIssueURL) Тогда
	//	РезультатОбновления = Redmine.ОтправитьЗапросВRedmine(updateIssueURL, "PUT", ДанныеЗадачиRedmine);
	//КонецЕсли;
	
	ИДНовойЗадачи = 23398;
	// 5. Формируем данные для обновления задачи в kaiten
	РезультатОбновленияЗадачиKaiten = Redmine.ОтправитьНомерЗадачиRedmineВKaiten(ИДНовойЗадачи);
	РезультатПроверки = Redmine.ПроверитьРезультатОбновленияНомераЗадачиRedmineВKaiten(РезультатОбновленияЗадачиKaiten);
	Если РезультатПроверки.Результат = Ложь Тогда
		Сообщить("Не удалось обновить номер задачи Redmine в задаче Kaiten:
			|" + РезультатПроверки.ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

Redmine	= Новый redmine();

// Входные параметры url kaiten задачи, файл конфига (или параметры по одному)
// 0. Разбираем параметры командной строки
ПараметрыСоздания = Redmine.Инициализировать(АргументыКоманднойСтроки);

// Общий алгоритм
СоздатьЗадачуRedmine(ПараметрыСоздания);