#Использовать "."

Перем Задачи;
Процедура ПолучитьПоследниеКоммитыИзГитаИОтправитьВКайтенСтрокиСонара(ПутьКХранениюКоличестваРанееОбработанныхКоммитов)

	ВсегоКоммитов				= Задачи.ВсегоКоммитов();
	Сообщить("Всего коммитов - " + ВсегоКоммитов);
	ПоследнийОбработанныйКоммит = Задачи.ПоследнийОбработанныйКоммит(ПутьКХранениюКоличестваРанееОбработанныхКоммитов);
	Сообщить("Последний обработанный коммит - " + ПоследнийОбработанныйКоммит);
	ТребуетсяОбработатьКоммитов = ВсегоКоммитов - ПоследнийОбработанныйКоммит;
	Сообщить("Требуется обработать коммитов - " + ТребуетсяОбработатьКоммитов);
	Если ТребуетсяОбработатьКоммитов = 0 Тогда
		Сообщить("Обработка коммитов не требуется, выполнение завершено");
		Возврат;
	КонецЕсли;
	Сообщить("Обработка коммитов...");
	Если Задачи.ОбработатьНовыеКоммиты(ТребуетсяОбработатьКоммитов) Тогда
		Задачи.УстановитьПоследнийОбработанныйКоммит(ПутьКХранениюКоличестваРанееОбработанныхКоммитов, ВсегоКоммитов);	
	КонецЕсли;	
	Сообщить("Обработка коммитов завершена");
	Сообщить("Выполнение завершено");
	
КонецПроцедуры

Задачи = Новый gitlog();
Переменные = Задачи.ИницилизацияПеременных(АргументыКоманднойСтроки);
ПолучитьПоследниеКоммитыИзГитаИОтправитьВКайтенСтрокиСонара(Переменные.Получить("ПутьКХранениюКоличестваРанееОбработанныхКоммитов"));